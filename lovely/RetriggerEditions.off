[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# end of round
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "local eval = eval_card(G.hand.cards[i], {end_of_round = true,cardarea = G.hand, repetition = true, repetition_only = true})"
position = "before"
payload = '''
-- Blurred edition repetition
local eval = eval_card(G.hand.cards[i], {edition_repetition_only = true,end_of_round = true,cardarea = G.hand, repetition = true})
if eval and next(eval) and (next(effects[1]) or #effects > 1) then 
    for h = 1, eval.edition.repetitions do
        reps[#reps+1] = eval
    end
end
'''
match_indent = true

# played cards
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "local eval = eval_card(scoring_hand[i], {repetition_only = true,cardarea = G.play, full_hand = G.play.cards, scoring_hand = scoring_hand, scoring_name = text, poker_hands = poker_hands, repetition = true})"
position = "before"
payload = '''
-- Blurred edition repetition
local eval = eval_card(scoring_hand[i], {edition_repetition_only = true, cardarea = G.play, full_hand = G.play.cards, scoring_hand = scoring_hand, scoring_name = text, poker_hands = poker_hands, repetition = true})
if eval and next(eval) then 
    sendDebugMessage("retriggering card because of blur " .. eval.edition.repetitions .. " times")
    for h = 1, eval.edition.repetitions do
        reps[#reps+1] = eval
    end
end
'''
match_indent = true


# held cards
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "local eval = eval_card(G.hand.cards[i], {repetition_only = true,cardarea = G.hand, full_hand = G.play.cards, scoring_hand = scoring_hand, scoring_name = text, poker_hands = poker_hands, repetition = true, card_effects = effects})"
position = "before"
payload = '''
-- Blurred edition repetition
local eval = eval_card(G.hand.cards[i], {edition_repetition_only = true, cardarea = G.hand, full_hand = G.play.cards, scoring_hand = scoring_hand, scoring_name = text, poker_hands = poker_hands, repetition = true, card_effects = effects})
if eval and next(eval) and (next(effects[1]) or #effects > 1) then 
    for h = 1, eval.edition.repetitions do
        reps[#reps+1] = eval
    end
end
'''
match_indent = true


# check for edition retriggers
[[patches]]
[patches.regex]
target = "functions/state_events.lua"
pattern = 'or reps\[j\]\.seals'
position = "after"
payload = " or reps[j].edition"
match_indent = true

